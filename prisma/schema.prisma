datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  accounts Account[]
  sessions Session[]
  input    UserInput?
  diets    Diet[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserInput {
  id          String    @id @unique @default(cuid())
  userId      String    @unique
  user        User      @relation(onDelete: Cascade, fields: [userId], references: [id])
  goal        String
  age         String
  gender      String
  heigth      String
  weigth      String
  tmb         String?
  fatMass     String?
  muscleMass  String?
  visceralFat String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model Diet {
  id        String    @id @default(cuid())
  name      String
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  diet      Json
}
